
********************************************************************************
React Router
********************************************************************************

  from rithm

    ********************************************************************************
    Setup


      import {BrowserRouter, Route, Switch} from 'react-router-dom';

      render() {
        return (
          <BrowserRouter>
            <Switch>
              <Route exact path='./routeName" router={() => <ComponentName />} />
            </Switch>
          </BrowserRouter>
        )
      }


    ********************************************************************************
    Link


      import { Link } from 'react-router-dom';

      <Link to="/routeName">click me</Link>


    ********************************************************************************
    NavbarLink
      automatically calls activeClass inline or adds .active class in the html


      import { NavbarLink } from 'react-router-dom';

      <NavbarLink activeClass={nameOfClass}>click me</NavbarLink>


    ********************************************************************************
    match


      const currentColor = props => {
        const colorName = props.match.params.color;
        const hex = this.state.colors[colorName];
        return <Color {...props} hex={hex} />;
      };

      <BrowserRouter>
        <Switch>
          <Route exact path="/colors" render={colorListWithColors} />
          <Route exact path="/colors/new" render={newColorWithHandler} />
          <Route path="/colors/:color" render={currentColor} />
          <Redirect to="/colors" />
        </Switch>
      </BrowserRouter>




********************************************************************************
  from docs

  npm install --save react-router-dom

  const ReactRouter = require('react-router-dom');
  const Router = ReactRouter.BrowserRouter;
  const Route = ReactRouter.Route;

  <Router>
    <div className='containername'>
      <Route path='/pathname' component={componentName}>
    </div>
  </Router>



  ********************************************************************************
  from docs video

  npm install react-router-dom

  import { BrowserRouter, Link, Route } from 'react-router-dom';

  <Link to={'route/`${argument}`}> (argument is passed as a parameter that can be accessed on the match object (see below))
    text
  </Link>

  <Route path={'route/name:argument'} component={<ComponentName>} />
         (if the path={} matches the to={} the component={} renders a component name)

  parameters can be passed to the component on a match object

  const componentName = ({ match }) => {
    match.params.argument
                (because :argument was used after the name)
  }
