*******************************************************************************************
flexbox
*******************************************************************************************
  overview

    display: flex       -> needs to be applied to the parent container

    justify-content     -> (right to left) flex-start, flex-end, center, space-between, space-around
    align-items         -> (top to bottom) flex-start, flex-end, center, baseline, stretch (applies to content that isn't wrapped)
    flex-direction      -> row, row-reverse, column, column-reverse
    flex-wrap           -> wrap, nowrap, wrap-reverse
    flex-flow           -> shorthand for (flex-direction, flex-wrap)
    align-content       -> flex-start, flex-end, center, space-between, space-around, stretch (for entire multiple row content with wrap)

    order               -> integer
    align-self          -> flex-start, flex-end, center, baseline, stretch (overrides the align items for a specific element)


  *******************************************************************************************
  details

    justify-content     -> belongs in the same container as display: flex and allows you to move the content right and left
                             justify-content: space-* won't work if you are specifying the children elements with flex: 1 
                               you have to specify the width of the children elements using flex-basis: 30%
    align-items         -> belongs in the same container as display: flex and allows you to move the content up and down (position in the column)
                             by default a flexed container has equal height columns (stretch) 
                             if you want the column only to take up the space of its content you can use flex-end or flex-start
    flex-direction      -> belongs in the same container as display: flex and allows you to conotrol the direction of the content
                             when reversing the row the justify-content arguments also have to be reversed
    flex-wrap           -> belongs in the same container as display: flex and allows you to wrap items if the row total exceeds the item widths
    align-content       -> belongs in the same container as display: flex and allows you to specify the space between rows

    order               -> is applied to a child of the display: flex container and accepts an + - interger
    align-self          -> is applied to a child of the display: flex container to override the align-items assignment 


    flex: 1             -> shorthand for flex-grow and flex-shrink

    flex-grow: 1        -> gives all the elements in that container an equal width regardless of the screen width
    flex-grow: 2        -> can be applied to a specific item to give it twice the width as the others

    flex-basis: 30%     -> instead of specifying the width of an element it is better to use flex-basis: %30
                           that way if you remove the display: flex (maybe with media queries) the flex-basis amount defaults to %100;

    flex-wrap: wrap     -> needs to have widths specified


    *******************************************************************************************
    centering vertically 

      parent element
        display: flex

      child element

